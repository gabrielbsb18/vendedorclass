#include "topconn.ch"
#include "totvs.ch"
#include "tbiconn.ch"

/*/{Protheus.doc} u_TstVendedor3
Rotina para testar a classe VendedorClass
@author Gabriel Dantas
@since 17/07/2024
@version 1.0
/*/
Function U_TstVendedor

    	RPCSetType(3)
	PREPARE ENVIRONMENT EMPRESA "99" FILIAL "01"
  
        // Testa o método create
        u_tstCreateVendedor()

        // Testa o método setDadosVendedor
        u_TstSetDadosVendedor()

        // Testa o método update
        u_TstUpdateVendedor()

        // Testa o método delete
        u_TstDeleteVendedor()

	RESET ENVIRONMENT

Return
    // Testando o método create()
    Function u_tstCreateVendedor
    local oVendedor := VendedorClass():new()

    // Testando o método create()
    oVendedor:create("0007", "01")

    if oVendedor:cError != ""
        Conout("Erro ao criar vendedor: " + oVendedor:cError + CRLF)
        Return
    endIf

    Conout("Vendedor criado com sucesso!" + CRLF)

    // Verifica se o registro foi realmente criado
    dbGoTop()
    if !SA3->(dbSeek("01" + "0007"))
        Conout("Erro: Vendedor não foi encontrado na base de dados." + CRLF)
        Return
    endIf

    Conout("Vendedor encontrado na base de dados com sucesso!" + CRLF)
return

/*/{Protheus.doc} u_TstSetDadosVendedor
Função para testar o método setDadosVendedor da classe VendedorClass

@author Gabriel Dantas
@since 19/07/2024
@version 1.0
/*/
Function u_TstSetDadosVendedor
    local oVendedor := VendedorClass():new()

    // Cria um vendedor para testar o método setDadosVendedor
    oVendedor:create("0004", "01")

    If oVendedor:cError != ""
        Conout("Erro ao criar vendedor para teste: " + oVendedor:cError + CRLF)
        Return
    EndIf

    // Testa o método setDadosVendedor
    oVendedor:setDadosVendedor()

    If oVendedor:cError != ""
        Conout("Erro ao configurar dados do vendedor: " + oVendedor:cError + CRLF)
        Return
    EndIf

    Conout("Dados do vendedor configurados com sucesso!" + CRLF)
return

/*/{Protheus.doc} u_TstUpdateVendedor
Função para testar o método update da classe VendedorClass

@author Gabriel Dantas
@since 19/07/2024
@version 1.0
/*/
Function u_TstUpdateVendedor
    local oVendedor := VendedorClass():new()

    // Cria um vendedor para testar o método update
    oVendedor:create("0005", "01")

    If oVendedor:cError != ""
        Conout("Erro ao criar vendedor para teste: " + oVendedor:cError + CRLF)
        Return
    EndIf

    // Atualiza os dados do vendedor
    oVendedor:update("0006", "01")

    If oVendedor:cError != ""
        Conout("Erro ao atualizar vendedor: " + oVendedor:cError + CRLF)
        Return
    EndIf

    Conout("Vendedor atualizado com sucesso!" + CRLF)
return

/*/{Protheus.doc} u_TstDeleteVendedor
Função para testar o método delete da classe VendedorClass

@author Gabriel Dantas
@since 19/07/2024
@version 1.0
/*/
Function u_TstDeleteVendedor
    local oVendedor := VendedorClass():new()

        // Cria um vendedor para testar o método delete
    oVendedor:create("0006", "01")

    If oVendedor:cError != ""
        Conout("Erro ao criar vendedor para teste: " + oVendedor:cError + CRLF)
        Return
    EndIf

    // Deleta o vendedor
    oVendedor:delete("0006", "01")

    If oVendedor:cError != ""
        Conout("Erro ao deletar vendedor: " + oVendedor:cError + CRLF)
        Return
    EndIf

    Conout("Vendedor deletado com sucesso!" + CRLF)
    
    // Verifica se o registro foi realmente deletado
    dbGoTop()
    If SA3->(dbSeek("01" + "0007"))
        Conout("Erro: Vendedor ainda encontrado na base de dados." + CRLF)
        Return
    EndIf

    Conout("Vendedor não encontrado na base de dados, exclusão confirmada!" + CRLF)
return
